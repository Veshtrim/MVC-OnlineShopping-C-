@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if(SignInManager.IsSignedIn(User)&& await UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result,"admin")){
    <li class="nav-item dropdown show">
        <a class="dropdown-toggle nav-link text-dark" href="#" data-toggle="dropdown">Admin</a>
        <div class="dropdown-menu">
            <a class="dropdown-item" asp-area="Admin"  asp-controller="Admin" asp-action="Index">Index</a>
            
             <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
        </div>

    </li>
    }else if (SignInManager.IsSignedIn(User))
 {
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>

    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
